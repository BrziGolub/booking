<Page x:Class="Booking.View.RateAccommodationAndOwner"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      mc:Ignorable="d" 
      d:DesignHeight="500" d:DesignWidth="900"
      Title="RateAccommodationAndOwner">

    <Page.Resources>
        <ControlTemplate x:Key="ValidationTemplate">
            <StackPanel>
                <!-- Placeholder for the TextBox itself -->
                <AdornedElementPlaceholder x:Name="textBox" />
                <TextBlock Text="{Binding [0].ErrorContent}" Foreground="Red" />
            </StackPanel>
        </ControlTemplate>
    </Page.Resources>
    <Grid >
        <Grid.Background>
            <ImageBrush ImageSource="/Resources/Images/starsBlur.jpg"></ImageBrush>
        </Grid.Background>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="45"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="40"/>
            <RowDefinition/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>
        
        <StackPanel Grid.Row="0" HorizontalAlignment="Center" Orientation="Horizontal">
            <Image Source="/Resources/Images/medal.png" Width="50" Height="45"></Image>
            <Label FontWeight="Bold" FontSize="17" VerticalAlignment="Center">Rate your accommodation and owner!</Label>
        </StackPanel>

        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="35,0,0,0">
            <Label Content="Accommodation: " FontWeight="Bold" Width="200" FontSize="14"></Label>
            <Label Content="{Binding AccommodationLabel}" Width="400" FontSize="14" FontWeight="Bold"></Label>
        </StackPanel>

        <StackPanel Grid.Row="2" Orientation="Horizontal"   HorizontalAlignment="Left" VerticalAlignment="Center" Margin="35,0,0,0">
            <Label Content="Owner: " FontWeight="Bold" Width="200" FontSize="15"></Label>
            <Label Content="{Binding OwnerLabel}" Width="400" FontSize="15" FontWeight="Bold"></Label>
        </StackPanel>

        <Grid Grid.Row="3" HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="35,0,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition Height="50"/>
                <RowDefinition Height="80"/>
                <RowDefinition Height="50"/>
                <RowDefinition Height="120"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition Width="205"/>
                <ColumnDefinition Width="190"/>
                <ColumnDefinition Width="240"/>
            </Grid.ColumnDefinitions>

            <Label Grid.Row="0" Grid.Column="0" HorizontalAlignment="Left"  FontSize="15" >Rate cleaness:</Label>
            <ComboBox x:Name="comboBoxCleaness"  ItemsSource="{Binding Path= comboBoxCleaness}" SelectedItem="{Binding Path=Cleaness, UpdateSourceTrigger=PropertyChanged,ValidatesOnDataErrors=True, NotifyOnValidationError=True}" 
                       Validation.ErrorTemplate="{StaticResource ValidationTemplate}" Grid.Row="0" Grid.Column="1" Margin="5" VerticalAlignment="Top" >
                <ComboBox.Style>
                    <Style TargetType="{x:Type ComboBox}">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter Property="BorderBrush" Value="Red" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
            </ComboBox>

            <Label Grid.Row="1" Grid.Column="0" HorizontalAlignment="Left" FontSize="14" >Rate courtesy of the owner:</Label>
            <ComboBox  x:Name="comboBoxCourtesy"  ItemsSource="{Binding Path= comboBoxCourtesy}"  SelectedItem="{Binding Path=Courtesy, UpdateSourceTrigger=PropertyChanged,ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                 Validation.ErrorTemplate="{StaticResource ValidationTemplate}"
                        Grid.Row="1" Grid.Column="1"  VerticalAlignment="Top" Margin="5">
                <ComboBox.Style>
                    <Style TargetType="{x:Type ComboBox}">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter Property="BorderBrush" Value="Red" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
            </ComboBox>

            <Label Grid.Row="2" Grid.Column="0" HorizontalAlignment="Left"  FontSize="14" >Add comment:</Label>
            <TextBox Grid.Row ="2" Grid.Column="1" Height="60" Margin="5" VerticalAlignment="Top" Text="{Binding Path= Comment, UpdateSourceTrigger=PropertyChanged,ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                 Validation.ErrorTemplate="{StaticResource ValidationTemplate}" AcceptsReturn="True" TextWrapping="Wrap">
                <TextBox.Style>
                    <Style TargetType="{x:Type TextBox}">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter Property="BorderBrush" Value="Red" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>

            <Label Grid.Row="0" Grid.Column="2"  HorizontalAlignment="Right" FontSize="14" >Add picture:</Label>
            <StackPanel Grid.Row="0" Grid.Column="3" Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Right" Grid.ColumnSpan="2">
                <Button   Content="-" Height="22" Width="22" FontSize="14" FontWeight="Black"  Command="{Binding RemovePicture}"/>
                <TextBox   HorizontalAlignment="Left" TextWrapping="Wrap" Width="180" FontSize="15" Margin="5" Text="{Binding Path=TbPictures}"/>
                <Button   Content="+" Height="22" Width="22" FontSize="14" FontWeight="Black" Command="{Binding AddPicture}"/>
            </StackPanel>

            <StackPanel Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="2" Grid.RowSpan="3" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Stretch">
                <Button  Content="⬅" Height="18" Width="18" Command="{Binding PreviousPicture}" Visibility="{Binding ButtonPreviousVisibility}"/>
                <Image  Stretch="UniformToFill" Width="250" Source="{Binding ImageSlideshowSource}" Margin="5"/>
                <Button  Content="➞"  Height="18" Width="18" Command="{Binding NextPicture}" Visibility="{Binding ButtonNextVisibility}"/>
            </StackPanel>
            
            <Label Grid.Row="3" Grid.Column="0" HorizontalAlignment="Left"  FontSize="14">Areas that needs renovation:</Label>
            <TextBox Grid.Row ="3" Grid.Column="1" Margin="5" VerticalAlignment="Top" Text="{Binding Path= RenovationAreas, UpdateSourceTrigger=PropertyChanged,ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                 Validation.ErrorTemplate="{StaticResource ValidationTemplate}" AcceptsReturn="True" TextWrapping="Wrap" Height="25">
                <TextBox.Style>
                    <Style TargetType="{x:Type TextBox}">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter Property="BorderBrush" Value="Red" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>

            <Label Grid.Row="4" Grid.Column="0" HorizontalAlignment="Left"  FontSize="14">Urgency for renovation:</Label>
            <StackPanel Grid.Row="4" Grid.Column="1" Margin="6">
                <RadioButton GroupName="Levels" Content="Level 1 - Nice to have"  FontSize="14" Margin="2" IsChecked="{Binding Level1 , UpdateSourceTrigger=PropertyChanged}"></RadioButton>
                <RadioButton GroupName="Levels" Content="Levele 2 - Minor complaints"  FontSize="14" Margin="2" IsChecked="{Binding Level2 , UpdateSourceTrigger=PropertyChanged}"></RadioButton>
                <RadioButton GroupName="Levels" Content="Levele 3 - Really bothersome"  FontSize="14" Margin="2" IsChecked="{Binding Level3 , UpdateSourceTrigger=PropertyChanged}"></RadioButton>
                <RadioButton GroupName="Levels" Content="Level 4 - Really necessery"  FontSize="14" Margin="2" IsChecked="{Binding Level4 , UpdateSourceTrigger=PropertyChanged}"></RadioButton>
                <RadioButton GroupName="Levels" Content="Level 5 - Very bad contition"  FontSize="14" Margin="2" IsChecked="{Binding Level5 , UpdateSourceTrigger=PropertyChanged}"></RadioButton>
            </StackPanel>

        </Grid>

        <StackPanel Grid.Row="4" Orientation="Horizontal" HorizontalAlignment="Center">
            <Button FontWeight="Bold" Margin="3" Width="100" Command="{Binding Button_Click_Subbmit}" >SUBBMIT</Button>
        </StackPanel>
    </Grid>
    
</Page>
